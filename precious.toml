#:schema ./precious-schema.json

[commands.shfmt]
type = "both"
include = [
  "XDG_BIN_HOME/*",
  "XDG_CONFIG_HOME/git/hooks/*",
  "*.sh",
  "XDG_CONFIG_HOME/zsh/*.zsh",
  "XDG_CONFIG_HOME/zsh/functions/*",
]
exclude = ["**/myrc.zsh", "**/bw-ssh-add", "**/.gitignore", "**/rfunc"]
cmd = ["shfmt"]
lint_flags = ["--diff"]
tidy_flags = ["--write", "--simplify"]
ok_exit_codes = [0]
[commands.shellcheck]
type = "lint"
include = [
  "XDG_BIN_HOME/*",
  "XDG_CONFIG_HOME/git/hooks/*",
  "*.sh",
  "XDG_CONFIG_HOME/zsh/*.zsh",
  "XDG_CONFIG_HOME/zsh/functions/*",
]
exclude = [
  "**/myrc.zsh",
  "**/bw-ssh-add",
  "**/prompt.zsh",
  "**/.gitignore",
  "**/rfunc",
]
cmd = ["shellcheck", "--color=always"]
ok_exit_codes = [0]

[commands.vint]
type = "lint"
include = ["**/*.vim"]
cmd = ["vint", "--color", "--style-problem"]
ok_exit_codes = [0]
[commands.stylua]
type = "both"
include = ["XDG_CONFIG_HOME/nvim/lua/**/*.lua"]
cmd = ["stylua", "--color=always"]
lint_flags = ["--check", "--verify"]
ok_exit_codes = [0]

[commands."pre-comit.end-of-file"]
type = "tidy"
include = ["*"]
cmd = ["end-of-file-fixer"]
ok_exit_codes = [0, 1]
[commands."pre-commit.trailing-whitespace"]
type = "tidy"
include = ["*"]
cmd = ["trailing-whitespace-fixer"]
ok_exit_codes = [0, 1]

[commands.fixjson]
type = "both"
include = ["*.json", "*.jsonc", "*.json5"]
exclude = ["playbooks/*", "host/terminal.json"]
cmd = ["fixjson"]
tidy_flags = ["--write"]
ok_exit_codes = [0]
[commands.yamlfmt]
type = "both"
include = ["*.yaml", "*.yml"]
exclude = ["playbooks/*"]
cmd = ["yamlfmt"]
lint_flags = ["-lint"]
ok_exit_codes = [0]

[commands."taplo.format"]
type = "both"
include = ["*.toml"]
cmd = ["taplo", "format", "--colors=always"]
lint_flags = ["--check"]
ok_exit_codes = [0]
ignore_stderr = ["found files"]
[commands."taplo.lint-precious"]
type = "lint"
include = ["precious.toml"]
cmd = [
  "taplo",
  "check",
  "--colors=always",
  "--schema=https://raw.githubusercontent.com/brycekbargar/dotfiles/main/precious-schema.json",
]
ok_exit_codes = [0]
ignore_stderr = ["found files"]

[commands.ansible-lint]
type = "both"
include = ["playbooks/**/*.yaml", "playbooks/**/*.yml"]
cmd = ["ansible-lint", "--force-color", "-c", "playbooks/.ansible-lint"]
tidy_flags = ["--write", "-q"]
ok_exit_codes = [0, 2]
ignore_stderr = ["Passed"]
