#!/usr/bin/env zsh
# TODO: Make a function

local INSTALL_TYPE
local ENVIRONMENT
local YES
local QUIET
local GLOBAL=true

# parse argv variables
while [[ "$#" -gt 0 ]]; do
	case "$1" in
        -n | --name)
            ENVIRONMENT="$2"
            GLOBAL=false
            shift 2
        ;;
        -w | --with)
            INSTALL_TYPE="$2"
            shift 2
        ;;

        -g | --global)
            GLOBAL=true
            shift 1
        ;;
        # TODO: Allow installing to "current" environment
        -y | --yes)
            YES=true
            shift 1
        ;;
        -q | --quiet)
            QUIET=true
            shift 1
        ;;

        --)
            shift 1
            break
        ;;

        *)
            >&2 echo "Unknown option: $1"
            exit 1
        ;;

  esac
done

# TODO: Error handing and param validation

local CMD
case $INSTALL_TYPE in
    conda)
        if [[ -z "$ENVIRONMENT" || $GLOBAL == true ]]
        then
            ENVIRONMENT=installers-conda
        fi
        CMD="conda install --name $ENVIRONMENT --experimental-solver=libmamba --yes $@"
    ;;

    rust)
        CMD="conda run --name installers-rust --no-capture-output cargo install $@"
        if [[ -n "$ENVIRONMENT" ]]
        then
            CMD="CARGO_INSTALL_ROOT='$CONDA_ENVS/$ENVIRONMENT' $CMD"
        fi
    ;;

    go)
        CMD="conda run --name installers-go --no-capture-output go install $@"
        if [[ -n "$ENVIRONMENT" ]]
        then
            CMD="GOBIN='$CONDA_ENVS/$ENVIRONMENT/bin' $CMD"
        fi
    ;;

    *)
        >&2 echo "Unknown installer: $INSTALL_TYPE"
        exit 1
    ;;

esac

if [[ -n $QUIET ]]
then
    CMD="$CMD > /dev/null"
fi

if [[ -z $YES ]]
then
    vared -p 'Y/n:' -r "$CMD" -c OK
    if [[ "$OK" != Y ]]
    then
        exit 1
    fi
fi

eval $CMD
