---
- name: Create homebrew environment
  ansible.builtin.shell:
    cmd: "CONDA_ENVS_PATH='{{ lookup('env', 'CONDA_SYSTEM') }}' conda create --name installers-homebrew ruby=2.7 compilers --yes"
    creates: "{{ lookup('env', 'CONDA_SYSTEM') }}/homebrew"

- name: Set homebrew prefix
  ansible.builtin.set_fact:
    brew_prefix: "{{ item.path }}"
  loop:
    - arch: "x86_64"
      path: "/usr/local"
    - arch: "arm64"
      path: "/opt/homebrew"
  when: ansible_architecture == item.arch

- name: Download homebrew
  ansible.builtin.git:
    repo: "https://github.com/Homebrew/brew.git"
    version: "HEAD"
    force: true
    dest: "{{ brew_prefix }}"
    single_branch: true
    depth: 1

- name: Set shellenv
  ansible.builtin.command:
    cmd: |
      conda env config vars set \
      {{ item.var }}=brew_prefix/{{ item.value }}
  with_items:
    - var: HOMEBREW_PREFIX
      value: ""
    - var: HOMEBREW_CELLAR
      value: Cellar
    - var: HOMEBREW_REPOSITORY
      value: ""
  changed_when: true

- name: Link homebrew bin
  ansible.builtin.file:
    src: "{{ brew_prefix }}/bin"
    dest: "{{ lookup('env', 'XDG_PKG_HOME') }}/brew"
    state: link

- name: First time install homebrew
  ansible.builtin.shell:
    cmd: |
      conda run --name installers-homebrew \
      HOMEBREW_NO_AUTO_UPDATE=1 \
      HOMEBREW_NO_ENV_FILTERING=1 \
      HOMEBREW_USE_RUBY_FROM_PATH=1 \
      {{ lookup('env', 'XDG_PKG_HOME') }}/brew/brew update --force --quiet
  changed_when: false

- name: First time brew deps
  ansible.builtin.shell:
    cmd: |
      conda run --name installers-homebrew \
      HOMEBREW_NO_AUTO_UPDATE=1 \
      HOMEBREW_NO_ENV_FILTERING=1 \
      HOMEBREW_USE_RUBY_FROM_PATH=1 \
      {{ lookup('env', 'XDG_PKG_HOME') }}/brew/brew install curl git --quiet
  changed_when: false

- name: Brew Dr.
  ansible.builtin.command:
    cmd: brew doctor
  register: brew_doctor
  retries: 2
  changed_when: true

- name: Brew Dr. stdout
  ansible.builtin.debug:
    var: brew_doctor
  changed_when: true

- name: Full brew update/upgrade
  community.general.homebrew:
    update_homebrew: true
    upgrade_all: true
