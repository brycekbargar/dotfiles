---
- name: Make condarc from template
  ansible.builtin.copy:
    src: "{{ dotfiles }}/XDG_CONFIG_HOME/template.condarc"
    dest: "{{ lookup('env', 'CONDARC') }}"
    mode: "0644"

- name: Ensure channels
  ansible.builtin.blockinfile:
    path: "{{ lookup('env', 'CONDARC') }}"
    marker: "# {mark} ANSIBLE MANAGED CHANNELS"
    state: present
    insertafter: "channels:"
    block: |
      - conda-forge
      # TODO: Make this a var

- name: Update conda
  ansible.builtin.command:
    cmd: "conda update --name base conda --yes"
  changed_when: true

- name: Install libmamba
  ansible.builtin.command:
    cmd: "conda install --name base conda-libmamba-solver --yes"
  changed_when: false

- name: Update base
  ansible.builtin.command:
    cmd: "conda update --name base --all --yes"
  changed_when: true

- name: Create system environments
  ansible.builtin.shell:
    cmd: |
      CONDA_ROOT="{{ lookup('env', 'CONDA_SYSTEM') }}" \
      conda create --name {{ item.name }} {{ item.pkgs }} --yes
    creates: "{{ lookup('env', 'CONDA_SYSTEM') }}/{{ item.name }}"
  with_items:
    - name: "installers-conda"
      pkgs: ""
    - name: "installers-rust"
      pkgs: "rust openssl"
    - name: "installers-go"
      pkgs: "go"
    - name: "runtimes-python"
      pkgs: "python pipx"
    - name: "runtimes-nodejs"
      pkgs: "nodejs"

- name: Update system environments
  ansible.builtin.command:
    cmd: "conda update --name {{ item }} --all --yes"
  changed_when: true
  with_items:
    - "installers-conda"
    - "installers-rust"
    - "installers-go"
    - "runtimes-python"
    - "runtimes-nodejs"

- name: Update base npm
  ansible.builtin.command:
    cmd: "conda run --name runtimes-nodejs npm install -g npm@latest"
  changed_when: true

- name: Clean conda
  ansible.builtin.command:
    cmd: "conda clean --packages --yes"
  changed_when: true
