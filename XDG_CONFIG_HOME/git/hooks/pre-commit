#!/usr/bin/env bash

if ! repo=$(git rev-parse --show-toplevel); then
	echo -e "\n\033[1;31mAre you in a bare repo? Use git commit --no-verify for the initial commit.\033[0m" >&2
	exit 1
fi

if [ ! -f "$repo/.pre-commit-config.yaml" ] && [ ! -f "$repo/precious.toml" ]; then
	echo -e "\n\033[1;33m*** No pre-commit hooks for this repository! ***\033[0m" >&2
	exit 0
fi

echo -e "\n\033[1;35m*** Running '$0' Use git-commit --no-verify to skip. ***\033[0m" >&2

if [ -f "$repo/.pre-commit-config.yaml" ] && [ ! -f "$repo/precious.toml" ]; then
	echo -e "\033[1;31mFound a config for pre-commit💩 but not precious💍.\033[0m" >&2
	exit 1
fi

msg_file="$repo/.git/hooks/$(git rev-parse HEAD)"

{
	IFS=$'\n' read -r -d '' tidy_err
	IFS=$'\n' read -r -d '' tidy_out
} < <((printf '\0%s\0' "$(precious tidy --staged | tee /dev/tty)" 1>&2) 2>&1)

if [ -n "$tidy_err" ]; then
	if ! rg --quiet 'No tidying filters defined in your config' -- <<<"$tidy_err"; then
		echo -e "$tidy_err"
		exit 1
	fi
fi

diff_out=""
tidied_files=$(awk -- '$2 == "Tidied" { print $5 }' <<<"$tidy_out")
if rg --quiet '.' -- <<<"$tidied_files"; then
	diff_out="\n$(git --no-pager diff --color)\n"
	# shellcheck disable=SC2086
	git add $tidied_files
fi

if ! { lint_err="$(precious lint --staged 2>&1 >/dev/fd/3)"; } 3>&1; then
	if ! rg --quiet 'No linting filters defined in your config' -- <<<"$lint_err"; then
		echo -e "$lint_err"
		exit 1
	fi
fi

{
	git -c color.status=always --no-pager status --short --branch
	echo -e "$diff_out"
} >"$msg_file"
